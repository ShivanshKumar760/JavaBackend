Class and Object Theory
Introduction
● Java is primarily an object-oriented programming language. While it
extensively uses objects and classes to structure code, it also includes
primitive data types. Classes and objects are fundamental concepts in
Java's implementation of Object-Oriented Programming (OOP), used to
represent real-world concepts and entities.
Understanding Objects
● An object has properties (attributes) and functions (methods)—it knows
something and does something. For example, a pen has attributes such as
height, dimensions, and color, and it has functions such as writing.
Java Classes
● A class in Java is a blueprint for creating objects. It defines common
behaviors and properties shared by all objects of that class. Classes are
user-defined data types that act as templates for objects.
Java Objects
● An object in Java is an instance of a class. It is a basic unit of
Object-Oriented Programming and represents real-life entities.
Object-Oriented Programming (OOP)
● In OOP, an object has properties (attributes) and behaviors (methods). To
create an object, the first step is to create a class. The class serves as the
blueprint for the object.
● Once the class is created, the Java compiler compiles the class file into
bytecode, which is then used to generate the object. The JVM executes
the bytecode and manages object creation at runtime.